{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nvar deprecatedKeys = ['tabBar'];\n\nexport default (function (screenOptions, route) {\n  var keys = Object.keys(screenOptions);\n  var deprecatedKey = keys.find(function (key) {\n    return deprecatedKeys.includes(key);\n  });\n  if (typeof screenOptions.title === 'function') {\n    throw new Error([\"`title` cannot be defined as a function in navigation options for `\".concat(route.routeName, \"` screen. \\n\"), 'Try replacing the following:', '{', '    title: ({ state }) => state...', '}', '', 'with:', '({ navigation }) => ({', '    title: navigation.state...', '})'].join('\\n'));\n  }\n  if (deprecatedKey && typeof screenOptions[deprecatedKey] === 'function') {\n    throw new Error([\"`\".concat(deprecatedKey, \"` cannot be defined as a function in navigation options for `\").concat(route.routeName, \"` screen. \\n\"), 'Try replacing the following:', '{', \"    \".concat(deprecatedKey, \": ({ state }) => ({\"), '         key: state...', '    })', '}', '', 'with:', '({ navigation }) => ({', \"    \".concat(deprecatedKey, \"Key: navigation.state...\"), '})'].join('\\n'));\n  }\n  if (deprecatedKey && typeof screenOptions[deprecatedKey] === 'object') {\n    throw new Error([\"Invalid key `\".concat(deprecatedKey, \"` defined in navigation options for `\").concat(route.routeName, \"` screen.\"), '\\n', 'Try replacing the following navigation options:', '{', \"    \".concat(deprecatedKey, \": {\")].concat(_toConsumableArray(Object.keys(screenOptions[deprecatedKey]).map(function (key) {\n      return \"        \".concat(key, \": ...,\");\n    })), ['    },', '}', '\\n', 'with:', '{'], _toConsumableArray(Object.keys(screenOptions[deprecatedKey]).map(function (key) {\n      return \"    \".concat(deprecatedKey + key[0].toUpperCase() + key.slice(1), \": ...,\");\n    })), ['}']).join('\\n'));\n  }\n});","map":{"version":3,"sources":["validateScreenOptions.js"],"names":["deprecatedKeys","screenOptions","route","keys","Object","deprecatedKey","find","key","includes","title","Error","routeName","join","map","toUpperCase","slice"],"mappings":";AAAA,IAAMA,cAAc,GAAG,CAAC,QAAD,CAAvB;;AAMA,gBAAe,UAACC,aAAD,EAAgBC,KAAhB,EAA0B;EACvC,IAAMC,IAAI,GAAGC,MAAM,CAACD,IAAPC,CAAYH,aAAZG,CAAb;EAEA,IAAMC,aAAa,GAAGF,IAAI,CAACG,IAALH,CAAWI,UAAAA,GAAD;IAAA,OAASP,cAAc,CAACQ,QAAfR,CAAwBO,GAAxBP,CAAnBG;EAAAA,EAAtB;EAEA,IAAI,OAAOF,aAAa,CAACQ,KAArB,KAA+B,UAAnC,EAA+C;IAC7C,MAAM,IAAIC,KAAJ,CACJ,CAAA,qEAAA,CAAA,MAAA,CAC2ER,KAAK,CAACS,SADjF,EAAA,cAAA,CAAA,EAEE,8BAFF,EAGE,GAHF,EAIE,oCAJF,EAKE,GALF,EAME,EANF,EAOE,OAPF,EAQE,wBARF,EASE,gCATF,EAUE,IAVF,CAAA,CAWEC,IAXF,CAWO,IAXP,CADI,CAAN;EAcD;EAED,IAAIP,aAAa,IAAI,OAAOJ,aAAa,CAACI,aAAD,CAApB,KAAwC,UAA7D,EAAyE;IACvE,MAAM,IAAIK,KAAJ,CACJ,CAAA,GAAA,CAAA,MAAA,CACOL,aADP,EAAA,+DAAA,CAAA,CAAA,MAAA,CACsFH,KAAK,CAACS,SAD5F,EAAA,cAAA,CAAA,EAEE,8BAFF,EAGE,GAHF,EAAA,MAAA,CAAA,MAAA,CAISN,aAJT,EAAA,qBAAA,CAAA,EAKE,wBALF,EAME,QANF,EAOE,GAPF,EAQE,EARF,EASE,OATF,EAUE,wBAVF,EAAA,MAAA,CAAA,MAAA,CAWSA,aAXT,EAAA,0BAAA,CAAA,EAYE,IAZF,CAAA,CAaEO,IAbF,CAaO,IAbP,CADI,CAAN;EAgBD;EAED,IAAIP,aAAa,IAAI,OAAOJ,aAAa,CAACI,aAAD,CAApB,KAAwC,QAA7D,EAAuE;IACrE,MAAM,IAAIK,KAAJ,CACJ,CAAA,eAAA,CAAA,MAAA,CACmBL,aADnB,EAAA,uCAAA,CAAA,CAAA,MAAA,CAC0EH,KAAK,CAACS,SADhF,EAAA,WAAA,CAAA,EAEE,IAFF,EAGE,iDAHF,EAIE,GAJF,EAAA,MAAA,CAAA,MAAA,CAKSN,aALT,EAAA,KAAA,CAAA,4BAMKD,MAAM,CAACD,IAAPC,CAAYH,aAAa,CAACI,aAAD,CAAzBD,CAAAA,CAA0CS,GAA1CT,CACAG,UAAAA,GAAD;MAAA,OAAA,UAAA,CAAA,MAAA,CAAoBA,GAApB,EAAA,QAAA,CADCH;IAAAA,EANL,IASE,QATF,EAUE,GAVF,EAWE,IAXF,EAYE,OAZF,EAaE,GAbF,sBAcKA,MAAM,CAACD,IAAPC,CAAYH,aAAa,CAACI,aAAD,CAAzBD,CAAAA,CAA0CS,GAA1CT,CACAG,UAAAA,GAAD;MAAA,OAAA,MAAA,CAAA,MAAA,CACSF,aAAa,GAAGE,GAAG,CAAC,CAAD,CAAHA,CAAOO,WAAPP,EAAhBF,GAAuCE,GAAG,CAACQ,KAAJR,CAAU,CAAVA,CADhD,EAAA,QAAA,CADCH;IAAAA,EAdL,IAkBE,GAlBF,GAmBEQ,IAnBF,CAmBO,IAnBP,CADI,CAAN;EAsBD;AACF,CAjED","sourcesContent":["const deprecatedKeys = ['tabBar'];\n\n/**\n * Make sure screen options returned by the `getScreenOption`\n * are valid\n */\nexport default (screenOptions, route) => {\n  const keys = Object.keys(screenOptions);\n\n  const deprecatedKey = keys.find((key) => deprecatedKeys.includes(key));\n\n  if (typeof screenOptions.title === 'function') {\n    throw new Error(\n      [\n        `\\`title\\` cannot be defined as a function in navigation options for \\`${route.routeName}\\` screen. \\n`,\n        'Try replacing the following:',\n        '{',\n        '    title: ({ state }) => state...',\n        '}',\n        '',\n        'with:',\n        '({ navigation }) => ({',\n        '    title: navigation.state...',\n        '})',\n      ].join('\\n')\n    );\n  }\n\n  if (deprecatedKey && typeof screenOptions[deprecatedKey] === 'function') {\n    throw new Error(\n      [\n        `\\`${deprecatedKey}\\` cannot be defined as a function in navigation options for \\`${route.routeName}\\` screen. \\n`,\n        'Try replacing the following:',\n        '{',\n        `    ${deprecatedKey}: ({ state }) => ({`,\n        '         key: state...',\n        '    })',\n        '}',\n        '',\n        'with:',\n        '({ navigation }) => ({',\n        `    ${deprecatedKey}Key: navigation.state...`,\n        '})',\n      ].join('\\n')\n    );\n  }\n\n  if (deprecatedKey && typeof screenOptions[deprecatedKey] === 'object') {\n    throw new Error(\n      [\n        `Invalid key \\`${deprecatedKey}\\` defined in navigation options for \\`${route.routeName}\\` screen.`,\n        '\\n',\n        'Try replacing the following navigation options:',\n        '{',\n        `    ${deprecatedKey}: {`,\n        ...Object.keys(screenOptions[deprecatedKey]).map(\n          (key) => `        ${key}: ...,`\n        ),\n        '    },',\n        '}',\n        '\\n',\n        'with:',\n        '{',\n        ...Object.keys(screenOptions[deprecatedKey]).map(\n          (key) =>\n            `    ${deprecatedKey + key[0].toUpperCase() + key.slice(1)}: ...,`\n        ),\n        '}',\n      ].join('\\n')\n    );\n  }\n};\n"]},"metadata":{},"sourceType":"module"}