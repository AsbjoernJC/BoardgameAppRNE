{"ast":null,"code":"export default function getChildRouter(router, routeName) {\n  var _router$childRouters;\n  if ((_router$childRouters = router.childRouters) === null || _router$childRouters === void 0 ? void 0 : _router$childRouters[routeName]) {\n    return router.childRouters[routeName];\n  }\n  var Component = router.getComponentForRouteName(routeName);\n  return Component.router;\n}","map":{"version":3,"sources":["getChildRouter.ts"],"names":["getChildRouter","router","routeName","childRouters","Component","getComponentForRouteName"],"mappings":"AAAA,eAAe,SAASA,cAAT,CAAwBC,MAAxB,EAAqCC,SAArC,EAAwD;EAAA,IAAA,oBAAA;EACrE,IAAA,CAAA,oBAAA,GAAID,MAAM,CAACE,YAAX,MAAA,IAAA,IAAA,oBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAIF,oBAAAA,CAAsBC,SAAtBD,CAAJ,EAAsC;IACpC,OAAOA,MAAM,CAACE,YAAPF,CAAoBC,SAApBD,CAAP;EACD;EAED,IAAMG,SAAS,GAAGH,MAAM,CAACI,wBAAPJ,CAAgCC,SAAhCD,CAAlB;EAEA,OAAOG,SAAS,CAACH,MAAjB;AACD","sourcesContent":["export default function getChildRouter(router: any, routeName: string) {\n  if (router.childRouters?.[routeName]) {\n    return router.childRouters[routeName];\n  }\n\n  const Component = router.getComponentForRouteName(routeName);\n\n  return Component.router;\n}\n"]},"metadata":{},"sourceType":"module"}