{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nimport * as React from 'react';\nvar NavigationEventManager = function (_React$Component) {\n  _inherits(NavigationEventManager, _React$Component);\n  var _super = _createSuper(NavigationEventManager);\n  function NavigationEventManager() {\n    var _this;\n    _classCallCheck(this, NavigationEventManager);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"_actionSubscription\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_willFocusSubscription\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_willBlurSubscription\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_didFocusSubscription\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_didBlurSubscription\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_refocusSubscription\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_lastWillBlurKey\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_lastWillFocusKey\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_lastDidBlurKey\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_lastDidFocusKey\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_handleAction\", function (_ref) {\n      var state = _ref.state,\n        lastState = _ref.lastState,\n        action = _ref.action,\n        type = _ref.type,\n        context = _ref.context;\n      var _lastState$routes;\n      var _this$props = _this.props,\n        navigation = _this$props.navigation,\n        onEvent = _this$props.onEvent;\n\n      if (!navigation.isFocused()) {\n        return;\n      }\n      var previous = lastState ? (_lastState$routes = lastState.routes) === null || _lastState$routes === void 0 ? void 0 : _lastState$routes[lastState.index] : undefined;\n      var current = state.routes[state.index];\n      var payload = {\n        context: \"\".concat(current.key, \":\").concat(action.type, \"_\").concat(context || 'Root'),\n        state: current,\n        lastState: previous,\n        action: action,\n        type: type\n      };\n      if ((previous === null || previous === void 0 ? void 0 : previous.key) !== current.key) {\n        _this._emitWillFocus(current.key, payload);\n        if (previous === null || previous === void 0 ? void 0 : previous.key) {\n          _this._emitWillBlur(previous.key, payload);\n        }\n      }\n      if ((lastState === null || lastState === void 0 ? void 0 : lastState.isTransitioning) !== state.isTransitioning && state.isTransitioning === false) {\n        if (_this._lastWillBlurKey) {\n          _this._emitDidBlur(_this._lastWillBlurKey, payload);\n        }\n        if (_this._lastWillFocusKey) {\n          _this._emitDidFocus(_this._lastWillFocusKey, payload);\n        }\n      }\n      onEvent(current.key, 'action', payload);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_handleWillFocus\", function (_ref2) {\n      var lastState = _ref2.lastState,\n        action = _ref2.action,\n        context = _ref2.context,\n        type = _ref2.type;\n      var _lastState$routes2;\n      var navigation = _this.props.navigation;\n      var route = navigation.state.routes[navigation.state.index];\n      _this._emitWillFocus(route.key, {\n        context: \"\".concat(route.key, \":\").concat(action.type, \"_\").concat(context || 'Root'),\n        state: route,\n        lastState: lastState === null || lastState === void 0 ? void 0 : (_lastState$routes2 = lastState.routes) === null || _lastState$routes2 === void 0 ? void 0 : _lastState$routes2.find(function (r) {\n          return r.key === route.key;\n        }),\n        action: action,\n        type: type\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_handleWillBlur\", function (_ref3) {\n      var lastState = _ref3.lastState,\n        action = _ref3.action,\n        context = _ref3.context,\n        type = _ref3.type;\n      var _lastState$routes3;\n      var navigation = _this.props.navigation;\n      var route = navigation.state.routes[navigation.state.index];\n      _this._emitWillBlur(route.key, {\n        context: \"\".concat(route.key, \":\").concat(action.type, \"_\").concat(context || 'Root'),\n        state: route,\n        lastState: lastState === null || lastState === void 0 ? void 0 : (_lastState$routes3 = lastState.routes) === null || _lastState$routes3 === void 0 ? void 0 : _lastState$routes3.find(function (r) {\n          return r.key === route.key;\n        }),\n        action: action,\n        type: type\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_handleDidFocus\", function (_ref4) {\n      var lastState = _ref4.lastState,\n        action = _ref4.action,\n        context = _ref4.context,\n        type = _ref4.type;\n      var navigation = _this.props.navigation;\n      if (_this._lastWillFocusKey) {\n        var route = navigation.state.routes.find(function (r) {\n          return r.key === _this._lastWillFocusKey;\n        });\n        if (route) {\n          var _lastState$routes4;\n          _this._emitDidFocus(route.key, {\n            context: \"\".concat(route.key, \":\").concat(action.type, \"_\").concat(context || 'Root'),\n            state: route,\n            lastState: lastState === null || lastState === void 0 ? void 0 : (_lastState$routes4 = lastState.routes) === null || _lastState$routes4 === void 0 ? void 0 : _lastState$routes4.find(function (r) {\n              return r.key === route.key;\n            }),\n            action: action,\n            type: type\n          });\n        }\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_handleDidBlur\", function (_ref5) {\n      var lastState = _ref5.lastState,\n        action = _ref5.action,\n        context = _ref5.context,\n        type = _ref5.type;\n      var navigation = _this.props.navigation;\n      if (_this._lastWillBlurKey) {\n        var route = navigation.state.routes.find(function (r) {\n          return r.key === _this._lastWillBlurKey;\n        });\n        if (route) {\n          var _lastState$routes5;\n          _this._emitDidBlur(route.key, {\n            context: \"\".concat(route.key, \":\").concat(action.type, \"_\").concat(context || 'Root'),\n            state: route,\n            lastState: lastState === null || lastState === void 0 ? void 0 : (_lastState$routes5 = lastState.routes) === null || _lastState$routes5 === void 0 ? void 0 : _lastState$routes5.find(function (r) {\n              return r.key === route.key;\n            }),\n            action: action,\n            type: type\n          });\n        }\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_handleRefocus\", function () {\n      var _this$props2 = _this.props,\n        onEvent = _this$props2.onEvent,\n        navigation = _this$props2.navigation;\n      var route = navigation.state.routes[navigation.state.index];\n      onEvent(route.key, 'refocus');\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_emitWillFocus\", function (target, payload) {\n      if (_this._lastWillBlurKey === target) {\n        _this._lastWillBlurKey = undefined;\n      }\n      if (_this._lastWillFocusKey === target) {\n        return;\n      }\n      _this._lastDidFocusKey = undefined;\n      _this._lastWillFocusKey = target;\n      var _this$props3 = _this.props,\n        navigation = _this$props3.navigation,\n        onEvent = _this$props3.onEvent;\n      onEvent(target, 'willFocus', payload);\n      if (typeof navigation.state.isTransitioning !== 'boolean' || navigation.state.isTransitioning !== true && !navigation.dangerouslyGetParent()) {\n        _this._emitDidFocus(target, payload);\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_emitWillBlur\", function (target, payload) {\n      if (_this._lastWillFocusKey === target) {\n        _this._lastWillFocusKey = undefined;\n      }\n      if (_this._lastWillBlurKey === target) {\n        return;\n      }\n      _this._lastDidBlurKey = undefined;\n      _this._lastWillBlurKey = target;\n      var _this$props4 = _this.props,\n        navigation = _this$props4.navigation,\n        onEvent = _this$props4.onEvent;\n      onEvent(target, 'willBlur', payload);\n      if (typeof navigation.state.isTransitioning !== 'boolean' || navigation.state.isTransitioning !== true && !navigation.dangerouslyGetParent()) {\n        _this._emitDidBlur(target, payload);\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_emitDidFocus\", function (target, payload) {\n      if (_this._lastWillFocusKey !== target || _this._lastDidFocusKey === target) {\n        return;\n      }\n      _this._lastDidFocusKey = target;\n      var onEvent = _this.props.onEvent;\n      onEvent(target, 'didFocus', payload);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_emitDidBlur\", function (target, payload) {\n      if (_this._lastWillBlurKey !== target || _this._lastDidBlurKey === target) {\n        return;\n      }\n      _this._lastDidBlurKey = target;\n      var onEvent = _this.props.onEvent;\n      onEvent(target, 'didBlur', payload);\n    });\n    return _this;\n  }\n  _createClass(NavigationEventManager, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var navigation = this.props.navigation;\n      this._actionSubscription = navigation.addListener('action', this._handleAction);\n      this._willFocusSubscription = navigation.addListener('willFocus', this._handleWillFocus);\n      this._willBlurSubscription = navigation.addListener('willBlur', this._handleWillBlur);\n      this._didFocusSubscription = navigation.addListener('didFocus', this._handleDidFocus);\n      this._didBlurSubscription = navigation.addListener('didBlur', this._handleDidBlur);\n      this._refocusSubscription = navigation.addListener('refocus', this._handleRefocus);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _this$_actionSubscrip, _this$_willFocusSubsc, _this$_willBlurSubscr, _this$_didFocusSubscr, _this$_didBlurSubscri, _this$_refocusSubscri;\n      (_this$_actionSubscrip = this._actionSubscription) === null || _this$_actionSubscrip === void 0 ? void 0 : _this$_actionSubscrip.remove();\n      (_this$_willFocusSubsc = this._willFocusSubscription) === null || _this$_willFocusSubsc === void 0 ? void 0 : _this$_willFocusSubsc.remove();\n      (_this$_willBlurSubscr = this._willBlurSubscription) === null || _this$_willBlurSubscr === void 0 ? void 0 : _this$_willBlurSubscr.remove();\n      (_this$_didFocusSubscr = this._didFocusSubscription) === null || _this$_didFocusSubscr === void 0 ? void 0 : _this$_didFocusSubscr.remove();\n      (_this$_didBlurSubscri = this._didBlurSubscription) === null || _this$_didBlurSubscri === void 0 ? void 0 : _this$_didBlurSubscri.remove();\n      (_this$_refocusSubscri = this._refocusSubscription) === null || _this$_refocusSubscri === void 0 ? void 0 : _this$_refocusSubscri.remove();\n    }\n  }, {\n    key: \"render\",\n    value:\n\n    function render() {\n      return null;\n    }\n  }]);\n  return NavigationEventManager;\n}(React.Component);\nexport { NavigationEventManager as default };","map":{"version":3,"sources":["NavigationFocusEvents.js"],"names":["React","NavigationEventManager","Component","componentDidMount","navigation","props","_actionSubscription","addListener","_handleAction","_willFocusSubscription","_handleWillFocus","_willBlurSubscription","_handleWillBlur","_didFocusSubscription","_handleDidFocus","_didBlurSubscription","_handleDidBlur","_refocusSubscription","_handleRefocus","componentWillUnmount","remove","state","lastState","action","type","context","onEvent","isFocused","previous","routes","index","undefined","current","payload","key","_emitWillFocus","_emitWillBlur","isTransitioning","_lastWillBlurKey","_emitDidBlur","_lastWillFocusKey","_emitDidFocus","route","find","r","target","_lastDidFocusKey","dangerouslyGetParent","_lastDidBlurKey","render"],"mappings":"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","sourcesContent":["// @ts-check\n\nimport * as React from 'react';\n\n/**\n * @typedef {object} State\n * @prop {number} index\n * @prop {({ key: string } & (State | {}))[]} routes\n * @prop {boolean} [isTransitioning]\n *\n * @typedef {object} ParentPayload\n * @prop {string} type\n * @prop {object} action\n * @prop {State} state\n * @prop {State | {key: string, routes?: undefined, index?: undefined, isTransitioning?: undefined} | undefined | null} lastState\n * @prop {string} [context]\n *\n * @typedef {object} Payload\n * @prop {string} type\n * @prop {object} action\n * @prop {State | {key: string}} state\n * @prop {State | {key: string} | undefined | null} lastState\n * @prop {string} [context]\n *\n * @typedef {object} Props\n * @prop {object} navigation\n * @prop {Function} navigation.addListener\n * @prop {Function} navigation.removeListener\n * @prop {() => boolean} navigation.isFocused\n * @prop {() => object | undefined} navigation.dangerouslyGetParent\n * @prop {State} navigation.state\n * @prop {(target: string, type: string, data: any) => void} onEvent\n *\n * @extends {React.Component<Props>}\n */\nexport default class NavigationEventManager extends React.Component {\n  componentDidMount() {\n    const { navigation } = this.props;\n\n    this._actionSubscription = navigation.addListener(\n      'action',\n      this._handleAction\n    );\n\n    this._willFocusSubscription = navigation.addListener(\n      'willFocus',\n      this._handleWillFocus\n    );\n\n    this._willBlurSubscription = navigation.addListener(\n      'willBlur',\n      this._handleWillBlur\n    );\n\n    this._didFocusSubscription = navigation.addListener(\n      'didFocus',\n      this._handleDidFocus\n    );\n\n    this._didBlurSubscription = navigation.addListener(\n      'didBlur',\n      this._handleDidBlur\n    );\n\n    this._refocusSubscription = navigation.addListener(\n      'refocus',\n      this._handleRefocus\n    );\n  }\n\n  componentWillUnmount() {\n    this._actionSubscription?.remove();\n    this._willFocusSubscription?.remove();\n    this._willBlurSubscription?.remove();\n    this._didFocusSubscription?.remove();\n    this._didBlurSubscription?.remove();\n    this._refocusSubscription?.remove();\n  }\n\n  /**\n   * @type {{ remove(): void } | undefined}\n   */\n  _actionSubscription;\n\n  /**\n   * @type {{ remove(): void } | undefined}\n   */\n  _willFocusSubscription;\n\n  /**\n   * @type {{ remove(): void } | undefined}\n   */\n  _willBlurSubscription;\n\n  /**\n   * @type {{ remove(): void } | undefined}\n   */\n  _didFocusSubscription;\n\n  /**\n   * @type {{ remove(): void } | undefined}\n   */\n  _didBlurSubscription;\n\n  /**\n   * @type {{ remove(): void } | undefined}\n   */\n  _refocusSubscription;\n\n  /**\n   * @type {string | undefined}\n   */\n  _lastWillBlurKey;\n\n  /**\n   * @type {string | undefined}\n   */\n  _lastWillFocusKey;\n\n  /**\n   * @type {string | undefined}\n   */\n  _lastDidBlurKey;\n\n  /**\n   * @type {string | undefined}\n   */\n  _lastDidFocusKey;\n\n  /**\n   * The 'action' event will fire when navigation state changes.\n   * Detect if the focused route changed here and emit appropriate events.\n   *\n   * @param {ParentPayload} payload\n   */\n  _handleAction = ({ state, lastState, action, type, context }) => {\n    const { navigation, onEvent } = this.props;\n\n    // We should only emit events when the navigator is focused\n    // When navigator is not focused, screens inside shouldn't receive focused status either\n    if (!navigation.isFocused()) {\n      return;\n    }\n\n    const previous = lastState\n      ? lastState.routes?.[lastState.index]\n      : undefined;\n    const current = state.routes[state.index];\n\n    const payload = {\n      context: `${current.key}:${action.type}_${context || 'Root'}`,\n      state: current,\n      lastState: previous,\n      action,\n      type,\n    };\n\n    if (previous?.key !== current.key) {\n      this._emitWillFocus(current.key, payload);\n\n      if (previous?.key) {\n        this._emitWillBlur(previous.key, payload);\n      }\n    }\n\n    if (\n      lastState?.isTransitioning !== state.isTransitioning &&\n      state.isTransitioning === false\n    ) {\n      if (this._lastWillBlurKey) {\n        this._emitDidBlur(this._lastWillBlurKey, payload);\n      }\n\n      if (this._lastWillFocusKey) {\n        this._emitDidFocus(this._lastWillFocusKey, payload);\n      }\n    }\n\n    onEvent(current.key, 'action', payload);\n  };\n\n  /**\n   * @param {ParentPayload} payload\n   */\n  _handleWillFocus = ({ lastState, action, context, type }) => {\n    const { navigation } = this.props;\n    const route = navigation.state.routes[navigation.state.index];\n\n    this._emitWillFocus(route.key, {\n      context: `${route.key}:${action.type}_${context || 'Root'}`,\n      state: route,\n      lastState: lastState?.routes?.find((r) => r.key === route.key),\n      action,\n      type,\n    });\n  };\n\n  /**\n   * @param {ParentPayload} payload\n   */\n  _handleWillBlur = ({ lastState, action, context, type }) => {\n    const { navigation } = this.props;\n    const route = navigation.state.routes[navigation.state.index];\n\n    this._emitWillBlur(route.key, {\n      context: `${route.key}:${action.type}_${context || 'Root'}`,\n      state: route,\n      lastState: lastState?.routes?.find((r) => r.key === route.key),\n      action,\n      type,\n    });\n  };\n\n  /**\n   * @param {ParentPayload} payload\n   */\n  _handleDidFocus = ({ lastState, action, context, type }) => {\n    const { navigation } = this.props;\n\n    if (this._lastWillFocusKey) {\n      const route = navigation.state.routes.find(\n        (r) => r.key === this._lastWillFocusKey\n      );\n\n      if (route) {\n        this._emitDidFocus(route.key, {\n          context: `${route.key}:${action.type}_${context || 'Root'}`,\n          state: route,\n          lastState: lastState?.routes?.find((r) => r.key === route.key),\n          action,\n          type,\n        });\n      }\n    }\n  };\n\n  /**\n   * @param {ParentPayload} payload\n   */\n  _handleDidBlur = ({ lastState, action, context, type }) => {\n    const { navigation } = this.props;\n\n    if (this._lastWillBlurKey) {\n      const route = navigation.state.routes.find(\n        (r) => r.key === this._lastWillBlurKey\n      );\n\n      if (route) {\n        this._emitDidBlur(route.key, {\n          context: `${route.key}:${action.type}_${context || 'Root'}`,\n          state: route,\n          lastState: lastState?.routes?.find((r) => r.key === route.key),\n          action,\n          type,\n        });\n      }\n    }\n  };\n\n  _handleRefocus = () => {\n    const { onEvent, navigation } = this.props;\n    const route = navigation.state.routes[navigation.state.index];\n\n    onEvent(route.key, 'refocus');\n  };\n\n  /**\n   * @param {string} target\n   * @param {Payload} payload\n   */\n  _emitWillFocus = (target, payload) => {\n    if (this._lastWillBlurKey === target) {\n      this._lastWillBlurKey = undefined;\n    }\n\n    if (this._lastWillFocusKey === target) {\n      return;\n    }\n\n    this._lastDidFocusKey = undefined;\n    this._lastWillFocusKey = target;\n\n    const { navigation, onEvent } = this.props;\n\n    onEvent(target, 'willFocus', payload);\n\n    if (\n      typeof navigation.state.isTransitioning !== 'boolean' ||\n      (navigation.state.isTransitioning !== true &&\n        !navigation.dangerouslyGetParent())\n    ) {\n      this._emitDidFocus(target, payload);\n    }\n  };\n\n  /**\n   * @param {string} target\n   * @param {Payload} payload\n   */\n  _emitWillBlur = (target, payload) => {\n    if (this._lastWillFocusKey === target) {\n      this._lastWillFocusKey = undefined;\n    }\n\n    if (this._lastWillBlurKey === target) {\n      return;\n    }\n\n    this._lastDidBlurKey = undefined;\n    this._lastWillBlurKey = target;\n\n    const { navigation, onEvent } = this.props;\n\n    onEvent(target, 'willBlur', payload);\n\n    if (\n      typeof navigation.state.isTransitioning !== 'boolean' ||\n      (navigation.state.isTransitioning !== true &&\n        !navigation.dangerouslyGetParent())\n    ) {\n      this._emitDidBlur(target, payload);\n    }\n  };\n\n  /**\n   * @param {string} target\n   * @param {Payload} payload\n   */\n  _emitDidFocus = (target, payload) => {\n    if (this._lastWillFocusKey !== target || this._lastDidFocusKey === target) {\n      return;\n    }\n\n    this._lastDidFocusKey = target;\n\n    const { onEvent } = this.props;\n\n    onEvent(target, 'didFocus', payload);\n  };\n\n  /**\n   * @param {string} target\n   * @param {Payload} payload\n   */\n  _emitDidBlur = (target, payload) => {\n    if (this._lastWillBlurKey !== target || this._lastDidBlurKey === target) {\n      return;\n    }\n\n    this._lastDidBlurKey = target;\n\n    const { onEvent } = this.props;\n\n    onEvent(target, 'didBlur', payload);\n  };\n\n  render() {\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}