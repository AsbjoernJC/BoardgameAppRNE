{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React from \"react\";\nimport { Card } from \"@rneui/themed\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar BoardgameCard = function (_React$Component) {\n  _inherits(BoardgameCard, _React$Component);\n  var _super = _createSuper(BoardgameCard);\n  function BoardgameCard(props) {\n    var _this;\n    _classCallCheck(this, BoardgameCard);\n    _this = _super.call(this, props);\n    _this.state = {\n      image: null\n    };\n    return _this;\n  }\n  _createClass(BoardgameCard, [{\n    key: \"doStuff\",\n    value: function doStuff() {\n      console.log(\"pressed on a boardgame card\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsx(TouchableWithoutFeedback, {\n        onPress: this.doStuff.bind(this),\n        style: {\n          backgroundColor: \"#242038\"\n        },\n        children: _jsx(View, {\n          style: styles.boardgameCardView,\n          children: _jsxs(Card, {\n            containerStyle: {\n              borderRadius: 20,\n              margin: 5,\n              backgroundColor: \"#242038\",\n              paddingBottom: \"2%\",\n              paddingTop: \"3%\"\n            },\n            children: [_jsx(Card.Title, {\n              style: {\n                fontWeight: \"700\",\n                fontSize: 17,\n                color: \"#F7ECE1\",\n                textAlignVertical: \"top\",\n                maxHeight: 20,\n                textTransform: \"capitalize\"\n              },\n              children: this.props.name.length < 17 ? this.props.name : this.props.name.substring(0, 17)\n            }), _jsx(Card.Image, {\n              style: {\n                aspectRatio: 1\n              },\n              source: this.props.source\n            }), _jsx(Image, {\n              style: {\n                aspectRatio: 1,\n                width: 26,\n                height: 26,\n                margin: 5,\n                alignSelf: \"center\",\n                justifyContent: \"center\"\n              },\n              source: require(\"../../assets/FontAwesomeIcons/CircleRightarrow.png\")\n            })]\n          })\n        })\n      });\n    }\n  }]);\n  return BoardgameCard;\n}(React.Component);\nvar styles = StyleSheet.create({\n  boardgameCardView: {\n    justifyContent: \"center\"\n  }\n});\nexport default BoardgameCard;","map":{"version":3,"names":["React","Card","BoardgameCard","props","state","image","console","log","doStuff","bind","backgroundColor","styles","boardgameCardView","borderRadius","margin","paddingBottom","paddingTop","fontWeight","fontSize","color","textAlignVertical","maxHeight","textTransform","name","length","substring","aspectRatio","source","width","height","alignSelf","justifyContent","require","Component","StyleSheet","create"],"sources":["C:/PersonligeProjekter/ReactNativeWElements/Client/BoardgameCard/BoardGameCard.js"],"sourcesContent":["import React from \"react\";\r\nimport { Card } from \"@rneui/themed\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Image,\r\n  TouchableWithoutFeedback,\r\n} from \"react-native\";\r\n\r\nclass BoardgameCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      image: null,\r\n    };\r\n  }\r\n\r\n  doStuff() {\r\n    console.log(\"pressed on a boardgame card\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <TouchableWithoutFeedback\r\n        onPress={this.doStuff.bind(this)}\r\n        style={{ backgroundColor: \"#242038\" }}\r\n      >\r\n        <View style={styles.boardgameCardView}>\r\n          <Card\r\n            containerStyle={{\r\n              borderRadius: 20,\r\n              margin: 5,\r\n              backgroundColor: \"#242038\",\r\n              paddingBottom: \"2%\",\r\n              paddingTop: \"3%\",\r\n            }}\r\n          >\r\n            <Card.Title\r\n              style={{\r\n                fontWeight: \"700\",\r\n                fontSize: 17,\r\n                color: \"#F7ECE1\",\r\n                textAlignVertical: \"top\",\r\n                maxHeight: 20,\r\n                textTransform: \"capitalize\",\r\n              }}\r\n            >\r\n              {this.props.name.length < 17\r\n                ? this.props.name\r\n                : this.props.name.substring(0, 17)}\r\n            </Card.Title>\r\n\r\n            <Card.Image style={{ aspectRatio: 1 }} source={this.props.source} />\r\n            <Image\r\n              style={{\r\n                aspectRatio: 1,\r\n                width: 26,\r\n                height: 26,\r\n                margin: 5,\r\n                alignSelf: \"center\",\r\n                justifyContent: \"center\",\r\n              }}\r\n              source={require(\"../../assets/FontAwesomeIcons/CircleRightarrow.png\")}\r\n            />\r\n          </Card>\r\n        </View>\r\n      </TouchableWithoutFeedback>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  boardgameCardView: { justifyContent: \"center\" },\r\n});\r\n\r\nexport default BoardgameCard;\r\n"],"mappings":";;;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,eAAe;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQ/BC,aAAa;EAAA;EAAA;EACjB,uBAAYC,KAAK,EAAE;IAAA;IAAA;IACjB,0BAAMA,KAAK;IAEX,MAAKC,KAAK,GAAG;MACXC,KAAK,EAAE;IACT,CAAC;IAAC;EACJ;EAAC;IAAA;IAAA,OAED,mBAAU;MACRC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC5C;EAAC;IAAA;IAAA,OAED,kBAAS;MACP,OACE,KAAC,wBAAwB;QACvB,OAAO,EAAE,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,IAAI,CAAE;QACjC,KAAK,EAAE;UAAEC,eAAe,EAAE;QAAU,CAAE;QAAA,UAEtC,KAAC,IAAI;UAAC,KAAK,EAAEC,MAAM,CAACC,iBAAkB;UAAA,UACpC,MAAC,IAAI;YACH,cAAc,EAAE;cACdC,YAAY,EAAE,EAAE;cAChBC,MAAM,EAAE,CAAC;cACTJ,eAAe,EAAE,SAAS;cAC1BK,aAAa,EAAE,IAAI;cACnBC,UAAU,EAAE;YACd,CAAE;YAAA,WAEF,KAAC,IAAI,CAAC,KAAK;cACT,KAAK,EAAE;gBACLC,UAAU,EAAE,KAAK;gBACjBC,QAAQ,EAAE,EAAE;gBACZC,KAAK,EAAE,SAAS;gBAChBC,iBAAiB,EAAE,KAAK;gBACxBC,SAAS,EAAE,EAAE;gBACbC,aAAa,EAAE;cACjB,CAAE;cAAA,UAED,IAAI,CAACnB,KAAK,CAACoB,IAAI,CAACC,MAAM,GAAG,EAAE,GACxB,IAAI,CAACrB,KAAK,CAACoB,IAAI,GACf,IAAI,CAACpB,KAAK,CAACoB,IAAI,CAACE,SAAS,CAAC,CAAC,EAAE,EAAE;YAAC,EACzB,EAEb,KAAC,IAAI,CAAC,KAAK;cAAC,KAAK,EAAE;gBAAEC,WAAW,EAAE;cAAE,CAAE;cAAC,MAAM,EAAE,IAAI,CAACvB,KAAK,CAACwB;YAAO,EAAG,EACpE,KAAC,KAAK;cACJ,KAAK,EAAE;gBACLD,WAAW,EAAE,CAAC;gBACdE,KAAK,EAAE,EAAE;gBACTC,MAAM,EAAE,EAAE;gBACVf,MAAM,EAAE,CAAC;gBACTgB,SAAS,EAAE,QAAQ;gBACnBC,cAAc,EAAE;cAClB,CAAE;cACF,MAAM,EAAEC,OAAO;YAAuD,EACtE;UAAA;QACG;MACF,EACkB;IAE/B;EAAC;EAAA;AAAA,EA5DyBhC,KAAK,CAACiC,SAAS;AA+D3C,IAAMtB,MAAM,GAAGuB,UAAU,CAACC,MAAM,CAAC;EAC/BvB,iBAAiB,EAAE;IAAEmB,cAAc,EAAE;EAAS;AAChD,CAAC,CAAC;AAEF,eAAe7B,aAAa"},"metadata":{},"sourceType":"module"}